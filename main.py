import os
import sys
import time
import random
import platform
import keyboard
import items.inventory as inventory

from player import Player
from dialog import Dialog
from menu import MainMenu
from messages import MessageType
from table import Table, Column, Row

from maps.map import MapManager

from maps.villager import Blacksmith
from fight import Fight
from mob import Witch

# from os import listdir
# from os.path import isfile, join


# def getListOfFiles(dirName):
#     # create a list of file and sub directories
#     # names in the given directory
#     listOfFile = os.listdir(dirName)
#     allFiles = list()
#     # Iterate over all the entries
#     for entry in listOfFile:
#         # Create full path
#         fullPath = os.path.join(dirName, entry)
#         # If entry is a directory then get the list of files in this directory
#         if os.path.isdir(fullPath):
#             allFiles = allFiles + getListOfFiles(fullPath)
#         else:
#             allFiles.append(fullPath)
#
#     return allFiles
#
# count = 0
# for f in getListOfFiles("."):
#     if str(f).endswith(".py"):
#         with open(f, encoding="utf-8") as file:
#             count += len(file.readlines())
#
# print(count)
# exit()


def move_cursor_to_top_left():
    sys.stdout.write("\033[H")  # Move cursor to top-left corner
    sys.stdout.flush()

keyboard_cooldown = 0

is_final_boss = False
debug = False

map_manager = MapManager(random.randint(3,20))
map_manager.generate_maps()


def clear():
    if platform.system() == "Windows":
        os.system("cls")
        move_cursor_to_top_left()
    else:
        os.system("clear")


main_menu = MainMenu()
main_menu.show_menu()
start_time = time.time()
clear()
name = "Idbi"
print("""
Mozg√°s: W, A, S, D
Valamely falakat √°t tudod t√∂rni, ehhez 3x kell menj a fal ir√°ny√°ba.
A t√°bl√°zatokban a nyilakkal mozoghatsz, √©s az ENTER lenyom√°s√°val v√°laszthatod ki.
Az ESC megnyom√°s√°val vagy elfutsz, vagy kil√©psz a j√°t√©kb√≥l!
A SPACE lenyom√°s√°val a dial√≥gusokat √°tugorhatod!
A p√°ly√°n tal√°lhat√≥ak port√°lok (‚ìÖ), melyekkel k√∂nnyen utazhatsz a vil√°gok k√∂z√∂tt.
A p√°ly√°n tal√°lhat√≥ak sz√∂rnyek (!). A sz√∂rnyek meg√∂l√©s√©vel p√©nzt szerzel.
A p√°ly√°n tal√°lhat√≥ak polg√°rok (‚åÇ). A polg√°rokkal tudsz kereskedni. Vehetsz t≈ël√ºk kardot, fegyvert, szettet, talizm√°nt, √©telt √©s italt.
A h√°tizs√°kodban tal√°lhat√≥ t√°rgyakat az ENTER lenyom√°s√°val tudod haszn√°lni.

""")
if not debug:
    name = input("J√°t√©kosn√©v: ")

clear()

player = Player(name, map_manager.maps[0])
player.armor_slot = inventory.items["√âji √Årnyak P√°nc√©lja"]
player.inventory.add_item(inventory.items["F√©ny Kardja"])
player.inventory.add_item(inventory.items["Csillagf√©nyes D√°rda"])
clear()

starter_npc_name = MessageType.STARTER_NPC_NAMES.value.get_message()

if not debug:
    Dialog(f"Ahogy a nap sugarai kereszt√ºlhas√≠tott√°k az ≈ëszi k√∂d√∂t, te, {name}, elindult√°l egy s≈±r≈± erd≈ë m√©ly√©n halad√≥ √∂sv√©nyen.",True).print()
    Dialog(f"A lombok susog√°sa √©s a madarak dalol√°sa k√≠s√©rte l√©pteidet, mik√∂zben el≈ëtted egy kis falu k√∂sz√∂nt√∂tt.", True).print()
    Dialog(f"A falu l√°tsz√≥lag b√©k√©s volt, de az emberek arckifejez√©se szorong√°st √©s aggodalmat t√ºkr√∂z√∂tt.").print()
    print()
    Dialog(f"- √údv√∂z√∂llek a(z) {map_manager.maps[0].name} t√©rs√©gben, {name}! - sz√≥l hozz√°d {starter_npc_name}.", True).print()
    Dialog(f"- K√©rlek, l√©gy √≥vatos. A falunkat egyre s≈±r≈±bben t√°madj√°k a sz√∂rnyek az erd≈ëb≈ël. Seg√≠ts√©gedre lenne sz√ºks√©g√ºnk, hogy megtiszt√≠tsuk a k√∂rny√©ket.").print()
    print()
    Dialog(f"A polg√°rmester mell√©d √°ll, √©s megfogja a v√°lladat.", True).print()
    Dialog(f"- K√©rlek {name}, te vagy az egyetlen rem√©ny√ºnk. Seg√≠ts nek√ºnk, √©s jutalmat nyersz, amelyre csak v√°gyhatsz.").print()
    print()
    Dialog(f"- {name}: Seg√≠tek nektek v√°roslak√≥k, b√≠zz√°tok r√°m ezt a feladatot! Ig√©rem, nem fogtok csal√≥dni bennem!").print()
    print()
    Dialog(f"Most rajtad van a sor... Tiszt√≠tsd meg a k√∂rny√©ket a sz√∂rnyekt≈ël! Fejl≈ëdj, szerelkezz fel, mert nem tudhatod, hogy az √∫t v√©g√©n mi v√°r...").print()
    time.sleep(3)
    clear()
    Dialog(f"Miut√°n elk√∂sz√∂nt√©l {starter_npc_name}-t√≥l/-t≈ël, elkezdt√©l v√°ndorolni a k√∂rny√©ken. Egy sz√©p ter√ºleten telepedt√©l le el≈ësz√∂r.").print()
    Dialog(f"{name}: Nagy munka v√°r r√°m holnap, jobb ha most pihenek egyet...").print()
    time.sleep(2)
    clear()
    Dialog(f"*M√°snap reggel*",True).print()
    Dialog(f"{name}: Na, l√°ssunk munk√°hoz! (Feladat: √ñld meg az √∂sszes sz√∂rnyet!)").print()
    clear()

#print(f"J√°t√©kos: {name}\t{player.health}‚ù§\t{player.balance}Ft\tArmor:{player.armor_slot.name}")
move_cursor_to_top_left()
print(player.current_map.get_map())
while True:

    if player.is_fighting:
        player_stats_data = player.get_calculated_stats()
        player_column = Column([
            Row(f"{name} %is_player_hit%", False, False, True),
            Row(f"‚Ä¢ √âleter≈ë: %health%‚ù§", False),
            #Row(f"‚Ä¢ Egyenleg: {player.balance} Ft", False),
            Row(f"‚Ä¢ Sebz√©s: ‚ùÅ %base_damage%", False),
            Row(" ", False),
            Row(f"üó°  Tal√°lat: %hit_chance%%", False, False, False),
            Row(f"‚ò£  Krit: %crit_chance%%", False, False, False),
            Row(f"üõ°  H√°r√≠t√°s: %dodge_chance%%", False, False, False),

        ], 20)
        #print(f"J√°t√©kos: {name}\t{player.health}‚ù§\t{player.balance}Ft\tArmor:{player.armor_slot.name}")

        opponent = player.current_fight.opponent
        opponent_column = Column([
            Row(f"{opponent.name} %is_mob_hit%", False, False, True),
            Row(f"‚Ä¢ √âleter≈ë: %mob_health%‚ù§", False, False, False),
            Row(f"‚Ä¢ Sebz√©s: ‚ùÅ {opponent.base_damage}", False, False, False),
            Row(" ", False),
            Row(f"üó°  Tal√°lat: {int(opponent.hit_chance * 100)}%", False, False, False),
            Row(f"‚ò£  Krit: {int(opponent.crit_chance * 100)}%", False, False, False),
            Row(f"üõ°  H√°r√≠t√°s: {int(opponent.dodge_chance * 100)}%", False, False, False),

        ], 20)
        table = player.inventory.get_inventory()
        table.bars[1] = "-"
        table.add_column(player_column)
        table.add_column(opponent_column)
        column_index = table.get_default_row()[0]
        selected_item = table.get_default_row()[1].line
        player.hand_slot = player.inventory.get_item_by_name(selected_item)
        clear()
        print(table.get_table())
        while not player.current_fight.finished:
            if player.current_fight.next_round:
                while True:
                    column = table.columns[column_index]
                    if keyboard_cooldown <= time.time_ns():
                        match keyboard.read_key(suppress = True):
                            case "up":
                                keyboard_cooldown = time.time_ns() + 250000000
                                selected_item = table.next_up(column_index).line
                                player.hand_slot = player.inventory.get_item_by_name(selected_item)
                                clear()
                                print(table.get_table())
                            case "down":
                                keyboard_cooldown = time.time_ns() + 250000000
                                selected_item = table.next_down(column_index).line
                                player.hand_slot = player.inventory.get_item_by_name(selected_item)
                                clear()
                                print(table.get_table())
                            case "enter":
                                keyboard_cooldown = time.time_ns() + 250000000
                                player.current_fight.run_next_round()
                                #time.sleep(1)
                                clear()
                                print(table.get_table())

                                break
                            case "esc":
                                if is_final_boss:
                                    continue
                                player.is_fighting = False
                                keyboard_cooldown = time.time_ns() + 550000000
                                clear()
                                if not debug:
                                    Dialog(f"{name} elfutott...").print()
                                player.current_fight.finished = True
                                break
            else:
                clear()
                print(table.get_table())
                player.current_fight.run_next_round()
                clear()
                print(table.get_table())
        player.current_fight = None
        player.is_fighting = False
        if map_manager.get_mobs() <= 0 and not is_final_boss:
            # End scene
            clear()
            Dialog(f"{starter_npc_name}: H√°l√°sak vagyunk neked, {name}! Visszahoztad a b√©ke √©s a biztons√°g √©rz√©s√©t a faluba!").print()
            Dialog(f"Azonban, mik√∂zben a falusiak √ºnneplik a gy≈ëzelmet, egy hatalmas √°rny√©k borul a falura. Egy furcsa ember j√∂n az √∫ton, k√∂r√ºl√∂tte √©rezni a fesz√ºlts√©get.").print()

            Dialog(f"Fekete M√°gus: √údv√∂z√∂llek, {name}. Gratul√°lok, hogy id√°ig eljutott√°l. De sajnos ez a v√©g√°llom√°sod lesz.").print()
            Dialog(f"{name}: Te vagy az, aki el√°tkozta ezt a vid√©ket √©s sz√∂rnyekkel hozta meg az uralm√°t?").print()
            Dialog(f"Fekete M√°gus: Haha, igen, √©n vagyok az, aki az √°tkot sz√≥rtam erre a t√°jra. Az emberek k√©ptelenek voltak meg√©rteni a hatalmat, amit birtokolok, √©s most fizetnek azok√©rt a hib√°k√©rt. De te semmi es√©lyed nincs ellenem, kis h≈ës. A s√∂t√©ts√©g √©s a var√°zslat hatalma a kezemben van.").print()

            Dialog(f"{name}: Nem engedhetem, hogy puszt√≠t√°sba tasz√≠tsd ezt a vid√©ket. Meg foglak √°ll√≠tani!").print()
            Dialog(f"Fekete M√°gus: Oh, mennyire naiv vagy. Meg akarsz k√ºzdeni velem? Engem, aki uralom al√° hajtottam minden √©l≈ël√©nyt ezen a vid√©ken? Engem, aki a s√∂t√©ts√©g √©s a var√°zslat √∂sszes titk√°t ismeri? {name}, te csak egy kis t√ºzes gyertya vagy a s√∂t√©t viharban.").print()

            Dialog(f"Fekete M√°gus: Most m√°r nincs tov√°bb menekv√©s sz√°modra. Gyere, pr√≥b√°lj meg megv√©deni valamit, ami m√°r r√©g elveszett!").print()
            time.sleep(5)
            player.current_fight = Fight(player, Witch(None,
                                                       random.randrange(1000,1575),
                                                       random.randrange(30,55),
                                                       random.randrange(30, 50) / 100,
                                                       random.randrange(15, 35) / 100,
                                                       random.randrange(25, 75) / 100,
                                                       ))
            player.is_fighting = True
            is_final_boss = True
        elif is_final_boss:
            # Game v√©ge
            Dialog(f"V√©g√ºl {name} legy≈ëzte a Fekete M√°gust, √©s most megpihen a csat√°t k√∂vet≈ëen.").print()
            Dialog(f"{starter_npc_name}: {name}, te t√©nyleg megmentetted a falut! H√°l√°sak vagyunk neked!").print()
            Dialog(f"{name}: Ez az √©n k√∂teless√©gem volt. De ne feledj√©tek, mindig l√©gyetek √≥vatosak. A s√∂t√©ts√©g mindig √∫jra √©s √∫jra felbukkanhat, √©s nem mindig lesznek h≈ës√∂k, akik fel√°llnak ellene.").print()
            Dialog(f"Ezut√°n a j√°t√©kos h≈ësk√©nt √ºnneplik, √©s a falu visszanyeri b√©k√©j√©t, majd {name} tov√°bb indult az √∫tj√°n a P√ÅGISZ fel√©...").print()

            time.sleep(5)
            clear()
            exit(f"GG Kivitted a j√°t√©kot :3, elt√∂lt√∂tt id≈ë: {time.time()-start_time}" )
        clear()
        print(player.current_map.get_map())
    else:
        should_refresh = False
        old = player.position.copy()
        old_map = player.current_map
        if keyboard_cooldown <= time.time_ns():
            match keyboard.read_key(suppress = True):
                case "w":
                        player.move_y(False)
                        should_refresh = True
                        keyboard_cooldown = time.time_ns() + 250000000
                case "s":
                        player.move_y(True)
                        should_refresh = True
                        keyboard_cooldown = time.time_ns() + 250000000
                case "a":
                        player.move_x(False)
                        should_refresh = True
                        keyboard_cooldown = time.time_ns() + 250000000
                case "d":
                        player.move_x(True)
                        should_refresh = True
                        keyboard_cooldown = time.time_ns() + 250000000
                case "esc":
                    exit("J√°t√©k v√©ge")
        if should_refresh:
            move_cursor_to_top_left()
            player.update_map(old,old_map)
            print(player.current_map.get_map())


